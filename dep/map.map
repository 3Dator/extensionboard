Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodsi4.o)
                              main.o (__udivmodsi4)
/usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm328p.o (exit)
/usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)
/usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(atoi.o)
                              main.o (atoi)
/usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(strcat.o)
                              main.o (strcat)
/usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(strcpy.o)
                              main.o (strcpy)
/usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(itoa.o)
                              main.o (__itoa)
/usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(itoa_ncheck.o)
                              /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(itoa.o) (__itoa_ncheck)
/usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(mul10.o)
                              /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(atoi.o) (__mulhi_const_10)
/usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(utoa_ncheck.o)
                              /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(itoa_ncheck.o) (__utoa_common)
/usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(strrev.o)
                              /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(utoa_ncheck.o) (strrev)

Allocating common symbols
Common symbol       size              file

functions           0x8               main.o
subRegisterLength   0x4               main.o
subRegister         0x3               main.o
leds                0xa2              main.o
addresses           0x4               main.o
usart_status        0x1               main.o
usart_rx_buffer     0x64              main.o
speed               0x1               main.o
last_char           0x1               main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm328p.o
LOAD main.o
START GROUP
LOAD /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x746
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm328p.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000068                . = ALIGN (0x2)
                0x0000000000000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000068        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000068                __trampolines_end = .
 *(.progmem*)
                0x0000000000000068                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000068                __ctors_start = .
 *(.ctors)
                0x0000000000000068                __ctors_end = .
                0x0000000000000068                __dtors_start = .
 *(.dtors)
                0x0000000000000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000068        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm328p.o
                0x0000000000000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000068        0xc /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000074       0x16 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
                0x0000000000000074                __do_copy_data
 .init4         0x000000000000008a       0x10 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
                0x000000000000008a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000009a        0x8 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm328p.o
 *(.init9)
 *(.text)
 .text          0x00000000000000a2        0x4 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm328p.o
                0x00000000000000a2                __vector_22
                0x00000000000000a2                __vector_12
                0x00000000000000a2                __bad_interrupt
                0x00000000000000a2                __vector_6
                0x00000000000000a2                __vector_3
                0x00000000000000a2                __vector_23
                0x00000000000000a2                __vector_25
                0x00000000000000a2                __vector_11
                0x00000000000000a2                __vector_13
                0x00000000000000a2                __vector_17
                0x00000000000000a2                __vector_19
                0x00000000000000a2                __vector_7
                0x00000000000000a2                __vector_5
                0x00000000000000a2                __vector_4
                0x00000000000000a2                __vector_9
                0x00000000000000a2                __vector_2
                0x00000000000000a2                __vector_21
                0x00000000000000a2                __vector_15
                0x00000000000000a2                __vector_8
                0x00000000000000a2                __vector_10
                0x00000000000000a2                __vector_16
                0x00000000000000a2                __vector_18
                0x00000000000000a2                __vector_20
 .text          0x00000000000000a6      0x50a main.o
                0x00000000000000a6                led
                0x00000000000000c8                animation
                0x00000000000000ca                usart_init
                0x0000000000000106                usart_write_char
                0x000000000000011c                usart_write_str
                0x0000000000000134                usart_write_P
                0x00000000000002c2                init_twi_slave
                0x00000000000002da                twi_register_callback
                0x0000000000000308                writeToSubRegister
                0x0000000000000350                executeCallback
                0x000000000000039a                __vector_24
                0x0000000000000442                setSpeed
                0x0000000000000448                fanInit
                0x0000000000000482                __vector_1
                0x0000000000000496                __vector_14
                0x00000000000004ca                setColor
                0x0000000000000552                setColorAnalog
                0x000000000000056c                setAnimation
                0x000000000000056e                ledInit
                0x00000000000005a4                fanA
                0x00000000000005ae                fanB
 .text          0x00000000000005b0        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodsi4.o)
 .text          0x00000000000005b0        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text          0x00000000000005b0        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text          0x00000000000005b0        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text          0x00000000000005b0        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(atoi.o)
 .text          0x00000000000005b0        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(strcat.o)
 .text          0x00000000000005b0        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(strcpy.o)
 .text          0x00000000000005b0        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(itoa.o)
 .text          0x00000000000005b0        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(itoa_ncheck.o)
 .text          0x00000000000005b0        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(mul10.o)
 .text          0x00000000000005b0        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(utoa_ncheck.o)
 .text          0x00000000000005b0        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(strrev.o)
                0x00000000000005b0                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x00000000000005b0       0x5e main.o
                0x00000000000005b0                main
 .text.libgcc.mul
                0x000000000000060e        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.div
                0x000000000000060e       0x44 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodsi4.o)
                0x000000000000060e                __udivmodsi4
 .text.libgcc   0x0000000000000652        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.prologue
                0x0000000000000652        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.builtins
                0x0000000000000652        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fmul
                0x0000000000000652        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fixed
                0x0000000000000652        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.mul
                0x0000000000000652        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000652        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000652        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000652        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000652        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000652        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000652        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000652        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000652        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000652        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000652        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000652        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000652        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000652        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000652        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000652        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000652        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000652        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000652        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000652        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000652        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x0000000000000652       0x3c /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(atoi.o)
                0x0000000000000652                atoi
 .text.avr-libc
                0x000000000000068e       0x16 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(strcat.o)
                0x000000000000068e                strcat
 .text.avr-libc
                0x00000000000006a4        0xe /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(strcpy.o)
                0x00000000000006a4                strcpy
 .text.avr-libc
                0x00000000000006b2       0x16 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(itoa.o)
                0x00000000000006b2                itoa
                0x00000000000006b2                __itoa
 .text.avr-libc
                0x00000000000006c8       0x16 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(itoa_ncheck.o)
                0x00000000000006c8                __itoa_ncheck
 .text.avr-libc
                0x00000000000006de       0x10 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(mul10.o)
                0x00000000000006de                __mulhi_const_10
 .text.avr-libc
                0x00000000000006ee       0x34 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(utoa_ncheck.o)
                0x00000000000006ee                __utoa_ncheck
                0x00000000000006f0                __utoa_common
 .text.avr-libc
                0x0000000000000722       0x20 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(strrev.o)
                0x0000000000000722                strrev
                0x0000000000000742                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000742        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
                0x0000000000000742                exit
                0x0000000000000742                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000742        0x4 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000746                _etext = .

.data           0x0000000000800100       0x9a load address 0x0000000000000746
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm328p.o
 .data          0x0000000000800100        0x6 main.o
                0x0000000000800100                ledcount
                0x0000000000800102                rx_buffer_pointer_out
                0x0000000000800104                rx_buffer_pointer_in
 .data          0x0000000000800106        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodsi4.o)
 .data          0x0000000000800106        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800106        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800106        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000800106        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(atoi.o)
 .data          0x0000000000800106        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(strcat.o)
 .data          0x0000000000800106        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(strcpy.o)
 .data          0x0000000000800106        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(itoa.o)
 .data          0x0000000000800106        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(itoa_ncheck.o)
 .data          0x0000000000800106        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(mul10.o)
 .data          0x0000000000800106        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(utoa_ncheck.o)
 .data          0x0000000000800106        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(strrev.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x0000000000800106       0x93 main.o
 *(.gnu.linkonce.d*)
                0x000000000080019a                . = ALIGN (0x2)
 *fill*         0x0000000000800199        0x1 
                0x000000000080019a                _edata = .
                0x000000000080019a                PROVIDE (__data_end, .)

.bss            0x000000000080019a      0x122
                0x000000000080019a                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x000000000080019a        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/crtm328p.o
 .bss           0x000000000080019a        0x6 main.o
                0x000000000080019a                pwmCounter
                0x000000000080019b                currentRegister
                0x000000000080019c                state
                0x000000000080019d                registerCount
                0x000000000080019e                buffercounter
 .bss           0x00000000008001a0        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_udivmodsi4.o)
 .bss           0x00000000008001a0        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .bss           0x00000000008001a0        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .bss           0x00000000008001a0        0x0 /usr/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .bss           0x00000000008001a0        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(atoi.o)
 .bss           0x00000000008001a0        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(strcat.o)
 .bss           0x00000000008001a0        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(strcpy.o)
 .bss           0x00000000008001a0        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(itoa.o)
 .bss           0x00000000008001a0        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(itoa_ncheck.o)
 .bss           0x00000000008001a0        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(mul10.o)
 .bss           0x00000000008001a0        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(utoa_ncheck.o)
 .bss           0x00000000008001a0        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr5/libc.a(strrev.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00000000008001a0      0x11c main.o
                0x00000000008001a0                functions
                0x00000000008001a8                subRegisterLength
                0x00000000008001ac                subRegister
                0x00000000008001af                leds
                0x0000000000800251                addresses
                0x0000000000800255                usart_status
                0x0000000000800256                usart_rx_buffer
                0x00000000008002ba                speed
                0x00000000008002bb                last_char
                0x00000000008002bc                PROVIDE (__bss_end, .)
                0x0000000000000746                __data_load_start = LOADADDR (.data)
                0x00000000000007e0                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008002bc        0x0
                0x00000000008002bc                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008002bc                PROVIDE (__noinit_end, .)
                0x00000000008002bc                _end = .
                0x00000000008002bc                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x28
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x28 main.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0xc1e
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0xc1e main.o

.debug_abbrev   0x0000000000000000      0x391
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x391 main.o

.debug_line     0x0000000000000000      0x262
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000      0x262 main.o

.debug_frame    0x0000000000000000      0x278
 *(.debug_frame)
 .debug_frame   0x0000000000000000      0x278 main.o

.debug_str      0x0000000000000000      0x437
 *(.debug_str)
 .debug_str     0x0000000000000000      0x437 main.o
                                        0x484 (size before relaxing)

.debug_loc      0x0000000000000000      0x9a5
 *(.debug_loc)
 .debug_loc     0x0000000000000000      0x9a5 main.o

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0x68
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x68 main.o

.debug_macro
 *(.debug_macro)
OUTPUT(dep/edator-extensionboard.elf elf32-avr)
LOAD linker stubs
